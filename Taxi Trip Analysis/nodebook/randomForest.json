{"paragraphs":[{"text":"//set the features for random forest regressor\nval assembler_RF = new VectorAssembler().setInputCols(Array(\"hour\", \"temp\", \"weatherIndex\", \"dayofweek\", \"pickupCluster\")).setOutputCol(\"features\")\nval featureVector_RF = assembler_RF.transform(featuresDF).cache()\nfeatureVector_RF.printSchema","user":"anonymous","dateUpdated":"2017-05-08T12:05:39-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nassembler_RF: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_50b4ab11c80d\n\nfeatureVector_RF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [hour: int, weatherIndex: double ... 5 more fields]\nroot\n |-- hour: integer (nullable = true)\n |-- weatherIndex: double (nullable = true)\n |-- temp: double (nullable = true)\n |-- pickupCluster: integer (nullable = true)\n |-- dayofweek: integer (nullable = true)\n |-- num: long (nullable = false)\n |-- features: vector (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1494184846457_205332848","id":"20170507-152046_887336466","dateCreated":"2017-05-07T15:20:46-0400","dateStarted":"2017-05-08T12:05:39-0400","dateFinished":"2017-05-08T12:05:40-0400","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:9462"},{"text":"featureVector_RF.createOrReplaceTempView(\"featureVector_RF\")","user":"anonymous","dateUpdated":"2017-05-09T12:35:09-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1494347689430_-1854081776","id":"20170509-123449_261536988","dateCreated":"2017-05-09T12:34:49-0400","dateStarted":"2017-05-09T12:35:09-0400","dateFinished":"2017-05-09T12:35:09-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9463"},{"text":"val featureVector_RF_300 = spark.sql(\"select features, num from featureVector_RF where num < 300 and num > 100\")","user":"anonymous","dateUpdated":"2017-05-09T13:27:44-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nfeatureVector_RF_300: org.apache.spark.sql.DataFrame = [features: vector, num: bigint]\n"}]},"apps":[],"jobName":"paragraph_1494347527561_1324502911","id":"20170509-123207_1406801244","dateCreated":"2017-05-09T12:32:07-0400","dateStarted":"2017-05-09T13:27:44-0400","dateFinished":"2017-05-09T13:27:44-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9464"},{"text":"val featureVector_RF_1000 = spark.sql(\"select features, num from featureVector_RF where num > 1000\")","user":"anonymous","dateUpdated":"2017-05-09T13:21:07-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nfeatureVector_RF_1000: org.apache.spark.sql.DataFrame = [features: vector, num: bigint]\n"}]},"apps":[],"jobName":"paragraph_1494350440523_-2004564045","id":"20170509-132040_1656029617","dateCreated":"2017-05-09T13:20:40-0400","dateStarted":"2017-05-09T13:21:07-0400","dateFinished":"2017-05-09T13:21:07-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9465"},{"text":"val featureVector_RF_100 = spark.sql(\"select features, num from featureVector_RF where num < 100\")","user":"anonymous","dateUpdated":"2017-05-09T13:27:20-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nfeatureVector_RF_100: org.apache.spark.sql.DataFrame = [features: vector, num: bigint]\n"}]},"apps":[],"jobName":"paragraph_1494350824995_1614706441","id":"20170509-132704_2080324478","dateCreated":"2017-05-09T13:27:04-0400","dateStarted":"2017-05-09T13:27:20-0400","dateFinished":"2017-05-09T13:27:20-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9466"},{"text":"val featureVector_RF_999 = spark.sql(\"select features, num from featureVector_RF where num < 1000 and num > 300\")","user":"anonymous","dateUpdated":"2017-05-09T13:36:07-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nfeatureVector_RF_999: org.apache.spark.sql.DataFrame = [features: vector, num: bigint]\n"}]},"apps":[],"jobName":"paragraph_1494351221181_744957744","id":"20170509-133341_1201241138","dateCreated":"2017-05-09T13:33:41-0400","dateStarted":"2017-05-09T13:36:07-0400","dateFinished":"2017-05-09T13:36:08-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9467"},{"text":"import org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.ml.feature.VectorIndexer\nimport org.apache.spark.ml.regression.{RandomForestRegressionModel, RandomForestRegressor}\n\n//to do vector index\nval featureIndexer = new VectorIndexer().setInputCol(\"features\").setOutputCol(\"indexedFeatures\").setMaxCategories(100).fit(featureVector_RF)\n\n//set the test and training data\nval Array(trainingData, testData) = featureVector_RF.randomSplit(Array(0.7, 0.3))\n\n//set the RandomForestRegressor\nval rf = new RandomForestRegressor().setLabelCol(\"num\").setFeaturesCol(\"indexedFeatures\").setMaxBins(32).setNumTrees(500)\n\n//do the pipeline\nval pipeline = new Pipeline().setStages(Array(featureIndexer, rf))\n\n//train the model\nval model = pipeline.fit(trainingData)\n\n//do the prediction and evaluation\nval predictions = model.transform(testData)\npredictions.select(\"prediction\", \"num\", \"features\").show(5)\n\nval evaluator = new RegressionEvaluator().setLabelCol(\"num\").setPredictionCol(\"prediction\").setMetricName(\"rmse\")\n\nval rmse = evaluator.evaluate(predictions)\nprintln(\"Root Mean Squared Error (RMSE) on test data = \" + rmse)\n\n\n//out put the rf model\nval rfModel = model.stages(1).asInstanceOf[RandomForestRegressionModel]\n//println(\"Learned regression forest model:\\n\" + rfModel.toDebugString)\n//show the importance for different features\nrfModel.featureImportances","user":"anonymous","dateUpdated":"2017-05-08T12:07:03-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.ml.Pipeline\n\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\n\nimport org.apache.spark.ml.feature.VectorIndexer\n\nimport org.apache.spark.ml.regression.{RandomForestRegressionModel, RandomForestRegressor}\n\nfeatureIndexer: org.apache.spark.ml.feature.VectorIndexerModel = vecIdx_36a5fe8cdf04\n\n\ntrainingData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [hour: int, weatherIndex: double ... 5 more fields]\ntestData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [hour: int, weatherIndex: double ... 5 more fields]\n\nrf: org.apache.spark.ml.regression.RandomForestRegressor = rfr_2566de3ebfd0\n\npipeline: org.apache.spark.ml.Pipeline = pipeline_db75d58fab61\n\nmodel: org.apache.spark.ml.PipelineModel = pipeline_db75d58fab61\n\npredictions: org.apache.spark.sql.DataFrame = [hour: int, weatherIndex: double ... 7 more fields]\n+------------------+---+--------------------+\n|        prediction|num|            features|\n+------------------+---+--------------------+\n|146.55378263770072| 21|[0.0,-13.9,0.0,1....|\n|150.22413970763807| 35|[0.0,-12.8,0.0,5....|\n| 65.10615622046555| 21|[0.0,-12.8,0.0,3....|\n|145.31680594340182| 30|[0.0,-11.0,0.0,2....|\n|145.72734596828337|120|[0.0,-10.6,0.0,4....|\n+------------------+---+--------------------+\nonly showing top 5 rows\n\n\nevaluator: org.apache.spark.ml.evaluation.RegressionEvaluator = regEval_678fa95a98ee\n\nrmse: Double = 127.0222696118402\nRoot Mean Squared Error (RMSE) on test data = 127.0222696118402\n\nrfModel: org.apache.spark.ml.regression.RandomForestRegressionModel = RandomForestRegressionModel (uid=rfr_3e9d0c284883) with 500 trees\n\nres102: org.apache.spark.ml.linalg.Vector = (5,[0,1,2,3,4],[0.7531940592265817,0.005157275174595111,3.45440807066707E-4,0.044679391152222574,0.19662383363953387])\n"}]},"apps":[],"jobName":"paragraph_1494184962324_-1727139928","id":"20170507-152242_1177670570","dateCreated":"2017-05-07T15:22:42-0400","dateStarted":"2017-05-08T12:07:03-0400","dateFinished":"2017-05-08T12:44:17-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9468"},{"text":"import org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.ml.feature.VectorIndexer\nimport org.apache.spark.ml.regression.{RandomForestRegressionModel, RandomForestRegressor}\n\n//to do vector index\nval featureIndexer = new VectorIndexer().setInputCol(\"features\").setOutputCol(\"indexedFeatures\").setMaxCategories(100).fit(featureVector_RF_300)\n\n//set the test and training data\nval Array(trainingData, testData) = featureVector_RF_300.randomSplit(Array(0.7, 0.3))\n\n//set the RandomForestRegressor\nval rf = new RandomForestRegressor().setLabelCol(\"num\").setFeaturesCol(\"indexedFeatures\").setMaxBins(32).setNumTrees(500)\n\n//do the pipeline\nval pipeline = new Pipeline().setStages(Array(featureIndexer, rf))\n\n//train the model\nval model2 = pipeline.fit(trainingData)\n\n//do the prediction and evaluation\nval predictions2 = model2.transform(testData)\npredictions2.select(\"prediction\", \"num\", \"features\").show(5)\n\nval evaluator = new RegressionEvaluator().setLabelCol(\"num\").setPredictionCol(\"prediction\").setMetricName(\"rmse\")\n\nval rmse = evaluator.evaluate(predictions2)\nprintln(\"Root Mean Squared Error (RMSE) on test data = \" + rmse)\n\n\n//out put the rf model\nval rfModel2 = model2.stages(1).asInstanceOf[RandomForestRegressionModel]\n//println(\"Learned regression forest model:\\n\" + rfModel.toDebugString)\n//show the importance for different features\nrfModel2.featureImportances","user":"anonymous","dateUpdated":"2017-05-09T13:28:01-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.ml.Pipeline\n\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\n\nimport org.apache.spark.ml.feature.VectorIndexer\n\nimport org.apache.spark.ml.regression.{RandomForestRegressionModel, RandomForestRegressor}\n\nfeatureIndexer: org.apache.spark.ml.feature.VectorIndexerModel = vecIdx_ed67f9783ad7\n\n\ntrainingData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [features: vector, num: bigint]\ntestData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [features: vector, num: bigint]\n\nrf: org.apache.spark.ml.regression.RandomForestRegressor = rfr_8c6a1e2b3029\n\npipeline: org.apache.spark.ml.Pipeline = pipeline_dc27127c9bdf\n\nmodel2: org.apache.spark.ml.PipelineModel = pipeline_dc27127c9bdf\n\npredictions2: org.apache.spark.sql.DataFrame = [features: vector, num: bigint ... 2 more fields]\n+------------------+---+--------------------+\n|        prediction|num|            features|\n+------------------+---+--------------------+\n|172.60358335346953|138|(5,[1,4],[0.6,133...|\n|181.36563135142157|140|(5,[1,4],[3.3,11.0])|\n| 181.9381320300829|178|(5,[1,4],[4.4,50.0])|\n|181.94233575827775|232|(5,[1,4],[9.4,26.0])|\n|180.33375337353843|104|(5,[1,4],[20.0,1.0])|\n+------------------+---+--------------------+\nonly showing top 5 rows\n\n\nevaluator: org.apache.spark.ml.evaluation.RegressionEvaluator = regEval_81f7a9da38b0\n\nrmse: Double = 52.077453691029575\nRoot Mean Squared Error (RMSE) on test data = 52.077453691029575\n\nrfModel2: org.apache.spark.ml.regression.RandomForestRegressionModel = RandomForestRegressionModel (uid=rfr_dccfd2ca9710) with 500 trees\n\nres125: org.apache.spark.ml.linalg.Vector = (5,[0,1,2,3,4],[0.5714612887387586,0.019927836205655337,4.60598050235119E-4,0.08914868761478699,0.319001589390564])\n"}]},"apps":[],"jobName":"paragraph_1494347731514_414459036","id":"20170509-123531_1608456856","dateCreated":"2017-05-09T12:35:31-0400","dateStarted":"2017-05-09T13:28:01-0400","dateFinished":"2017-05-09T13:36:08-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9469"},{"text":"import org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.ml.feature.VectorIndexer\nimport org.apache.spark.ml.regression.{RandomForestRegressionModel, RandomForestRegressor}\n\n//to do vector index\nval featureIndexer = new VectorIndexer().setInputCol(\"features\").setOutputCol(\"indexedFeatures\").setMaxCategories(10).fit(featureVector_RF_1000)\n\n//set the test and training data\nval Array(trainingData, testData) = featureVector_RF_1000.randomSplit(Array(0.7, 0.3))\n\n//set the RandomForestRegressor\nval rf = new RandomForestRegressor().setLabelCol(\"num\").setFeaturesCol(\"indexedFeatures\")//.setMaxBins(32).setNumTrees(500)\n\n//do the pipeline\nval pipeline = new Pipeline().setStages(Array(featureIndexer, rf))\n\n//train the model\nval model3 = pipeline.fit(trainingData)\n\n//do the prediction and evaluation\nval predictions3 = model3.transform(testData)\npredictions3.select(\"prediction\", \"num\", \"features\").show(5)\n\nval evaluator = new RegressionEvaluator().setLabelCol(\"num\").setPredictionCol(\"prediction\").setMetricName(\"rmse\")\n\nval rmse = evaluator.evaluate(predictions3)\nprintln(\"Root Mean Squared Error (RMSE) on test data = \" + rmse)\n\n\n//out put the rf model\nval rfModel3 = model3.stages(1).asInstanceOf[RandomForestRegressionModel]\n//println(\"Learned regression forest model:\\n\" + rfModel.toDebugString)\n//show the importance for different features\nrfModel3.featureImportances","user":"anonymous","dateUpdated":"2017-05-09T13:36:08-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.ml.Pipeline\n\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\n\nimport org.apache.spark.ml.feature.VectorIndexer\n\nimport org.apache.spark.ml.regression.{RandomForestRegressionModel, RandomForestRegressor}\n\nfeatureIndexer: org.apache.spark.ml.feature.VectorIndexerModel = vecIdx_9db4b7c9eb41\n\n\ntrainingData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [features: vector, num: bigint]\ntestData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [features: vector, num: bigint]\n\nrf: org.apache.spark.ml.regression.RandomForestRegressor = rfr_aa34738831d2\n\npipeline: org.apache.spark.ml.Pipeline = pipeline_a7b317d4ef3b\n\nmodel3: org.apache.spark.ml.PipelineModel = pipeline_a7b317d4ef3b\n\npredictions3: org.apache.spark.sql.DataFrame = [features: vector, num: bigint ... 2 more fields]\n+------------------+----+--------------------+\n|        prediction| num|            features|\n+------------------+----+--------------------+\n| 1191.855638112484|1283|[21.0,25.0,0.0,6....|\n|1102.8328628149463|1058|[19.0,25.6,0.0,4....|\n| 1115.715935329737|1014|[20.0,5.6,0.0,0.0...|\n|1040.5958872454198|1086|[0.0,1.1,0.0,5.0,...|\n|1152.0805238782536|1123|[1.0,10.6,0.0,6.0...|\n+------------------+----+--------------------+\nonly showing top 5 rows\n\n\nevaluator: org.apache.spark.ml.evaluation.RegressionEvaluator = regEval_19e386674494\n\nrmse: Double = 105.52986176542096\nRoot Mean Squared Error (RMSE) on test data = 105.52986176542096\n\nrfModel3: org.apache.spark.ml.regression.RandomForestRegressionModel = RandomForestRegressionModel (uid=rfr_e7030fc66847) with 20 trees\n\nres128: org.apache.spark.ml.linalg.Vector = (5,[0,1,2,3,4],[0.22741444216803647,0.25433884426107944,0.025771025633123668,0.38335708543329094,0.10911860250446954])\n"}]},"apps":[],"jobName":"paragraph_1494350476641_-1244638994","id":"20170509-132116_947951683","dateCreated":"2017-05-09T13:21:16-0400","dateStarted":"2017-05-09T13:36:08-0400","dateFinished":"2017-05-09T13:36:26-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9470"},{"text":"import org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.ml.feature.VectorIndexer\nimport org.apache.spark.ml.regression.{RandomForestRegressionModel, RandomForestRegressor}\n\n//to do vector index\nval featureIndexer = new VectorIndexer().setInputCol(\"features\").setOutputCol(\"indexedFeatures\").setMaxCategories(100).fit(featureVector_RF_100)\n\n//set the test and training data\nval Array(trainingData, testData) = featureVector_RF_100.randomSplit(Array(0.7, 0.3))\n\n//set the RandomForestRegressor\nval rf = new RandomForestRegressor().setLabelCol(\"num\").setFeaturesCol(\"indexedFeatures\").setMaxBins(32).setNumTrees(500)\n\n//do the pipeline\nval pipeline = new Pipeline().setStages(Array(featureIndexer, rf))\n\n//train the model\nval model4 = pipeline.fit(trainingData)\n\n//do the prediction and evaluation\nval predictions4 = model4.transform(testData)\npredictions4.select(\"prediction\", \"num\", \"features\").show(5)\n\nval evaluator = new RegressionEvaluator().setLabelCol(\"num\").setPredictionCol(\"prediction\").setMetricName(\"rmse\")\n\nval rmse = evaluator.evaluate(predictions4)\nprintln(\"Root Mean Squared Error (RMSE) on test data = \" + rmse)\n\n\n//out put the rf model\nval rfModel4 = model4.stages(1).asInstanceOf[RandomForestRegressionModel]\n//println(\"Learned regression forest model:\\n\" + rfModel.toDebugString)\n//show the importance for different features\nrfModel4.featureImportances","user":"anonymous","dateUpdated":"2017-05-09T13:37:32-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.ml.Pipeline\n\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\n\nimport org.apache.spark.ml.feature.VectorIndexer\n\nimport org.apache.spark.ml.regression.{RandomForestRegressionModel, RandomForestRegressor}\n\nfeatureIndexer: org.apache.spark.ml.feature.VectorIndexerModel = vecIdx_936a197c0099\n\n\ntrainingData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [features: vector, num: bigint]\ntestData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [features: vector, num: bigint]\n\nrf: org.apache.spark.ml.regression.RandomForestRegressor = rfr_100cd3f5f8af\n\npipeline: org.apache.spark.ml.Pipeline = pipeline_9445beb36cb8\n\nmodel4: org.apache.spark.ml.PipelineModel = pipeline_9445beb36cb8\n\npredictions4: org.apache.spark.sql.DataFrame = [features: vector, num: bigint ... 2 more fields]\n+------------------+---+--------------------+\n|        prediction|num|            features|\n+------------------+---+--------------------+\n| 35.11521743069437| 11|(5,[0,1],[1.0,11.1])|\n|26.303232528187646| 10|(5,[0,1],[5.0,17.2])|\n|26.709280926221215| 14|(5,[0,1],[5.0,27.8])|\n|38.957929443509435| 33|(5,[0,1],[7.0,27.8])|\n| 25.58747059192682|  8|(5,[0,1],[14.0,1.1])|\n+------------------+---+--------------------+\nonly showing top 5 rows\n\n\nevaluator: org.apache.spark.ml.evaluation.RegressionEvaluator = regEval_eba99250c8f8\n\nrmse: Double = 25.58408130591811\nRoot Mean Squared Error (RMSE) on test data = 25.58408130591811\n\nrfModel4: org.apache.spark.ml.regression.RandomForestRegressionModel = RandomForestRegressionModel (uid=rfr_9066e6092798) with 500 trees\n\nres131: org.apache.spark.ml.linalg.Vector = (5,[0,1,2,3,4],[0.566455098448605,0.0037391841915523113,3.305660812426196E-4,0.1342059068247077,0.29526924445389247])\n"}]},"apps":[],"jobName":"paragraph_1494350845880_1332316073","id":"20170509-132725_215296080","dateCreated":"2017-05-09T13:27:25-0400","dateStarted":"2017-05-09T13:37:32-0400","dateFinished":"2017-05-09T13:50:40-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9471"},{"text":"//to do vector index\nval featureIndexer = new VectorIndexer().setInputCol(\"features\").setOutputCol(\"indexedFeatures\").setMaxCategories(10).fit(featureVector_RF_999)\n\n//set the test and training data\nval Array(trainingData, testData) = featureVector_RF_999.randomSplit(Array(0.7, 0.3))\n\n//set the RandomForestRegressor\nval rf = new RandomForestRegressor().setLabelCol(\"num\").setFeaturesCol(\"indexedFeatures\").setMaxBins(32).setNumTrees(500)\n\n//do the pipeline\nval pipeline = new Pipeline().setStages(Array(featureIndexer, rf))\n\n//train the model\nval model5 = pipeline.fit(trainingData)\n\n//do the prediction and evaluation\nval predictions5 = model5.transform(testData)\npredictions5.select(\"prediction\", \"num\", \"features\").show(5)\n\nval evaluator = new RegressionEvaluator().setLabelCol(\"num\").setPredictionCol(\"prediction\").setMetricName(\"rmse\")\n\nval rmse = evaluator.evaluate(predictions5)\nprintln(\"Root Mean Squared Error (RMSE) on test data = \" + rmse)\n\n\n//out put the rf model\nval rfModel5 = model5.stages(1).asInstanceOf[RandomForestRegressionModel]\n//println(\"Learned regression forest model:\\n\" + rfModel.toDebugString)\n//show the importance for different features\nrfModel5.featureImportances","user":"anonymous","dateUpdated":"2017-05-09T13:37:56-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nfeatureIndexer: org.apache.spark.ml.feature.VectorIndexerModel = vecIdx_3c4480b61f42\n\n\ntrainingData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [features: vector, num: bigint]\ntestData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [features: vector, num: bigint]\n\nrf: org.apache.spark.ml.regression.RandomForestRegressor = rfr_1e0e4daa5da5\n\npipeline: org.apache.spark.ml.Pipeline = pipeline_3602ec405f45\n\nmodel5: org.apache.spark.ml.PipelineModel = pipeline_3602ec405f45\n\npredictions5: org.apache.spark.sql.DataFrame = [features: vector, num: bigint ... 2 more fields]\n+------------------+---+--------------------+\n|        prediction|num|            features|\n+------------------+---+--------------------+\n| 438.4996393115849|473|[0.0,-10.0,0.0,4....|\n|441.19668338504715|385|[0.0,-1.1,0.0,5.0...|\n| 387.2976696583015|308|[0.0,2.2,2.0,4.0,...|\n| 422.6246767199243|434|[0.0,3.3,0.0,6.0,...|\n| 388.2615510613541|369|[0.0,3.3,1.0,4.0,...|\n+------------------+---+--------------------+\nonly showing top 5 rows\n\n\nevaluator: org.apache.spark.ml.evaluation.RegressionEvaluator = regEval_66bac0c72b2b\n\nrmse: Double = 100.67696763574672\nRoot Mean Squared Error (RMSE) on test data = 100.67696763574672\n\nrfModel5: org.apache.spark.ml.regression.RandomForestRegressionModel = RandomForestRegressionModel (uid=rfr_4e2cdf6cb78f) with 500 trees\n\nres135: org.apache.spark.ml.linalg.Vector = (5,[0,1,2,3,4],[0.25072427460753655,0.012857574507487922,3.35136457289497E-4,0.04242002737720605,0.69366298705048])\n"}]},"apps":[],"jobName":"paragraph_1494351271402_-1408420553","id":"20170509-133431_2038043526","dateCreated":"2017-05-09T13:34:31-0400","dateStarted":"2017-05-09T13:37:56-0400","dateFinished":"2017-05-09T13:53:39-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9472"},{"text":"predictions.createOrReplaceTempView(\"predictions3\")","user":"anonymous","dateUpdated":"2017-05-08T10:02:26-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1494189446373_1658842431","id":"20170507-163726_1840412131","dateCreated":"2017-05-07T16:37:26-0400","dateStarted":"2017-05-08T10:02:26-0400","dateFinished":"2017-05-08T10:02:26-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9473"},{"text":"predictions.printSchema","user":"anonymous","dateUpdated":"2017-05-07T17:13:13-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- hour: integer (nullable = true)\n |-- weatherIndex: double (nullable = true)\n |-- temp: double (nullable = true)\n |-- pickupCluster: integer (nullable = true)\n |-- dayofweek: integer (nullable = true)\n |-- num: long (nullable = false)\n |-- features: vector (nullable = true)\n |-- indexedFeatures: vector (nullable = true)\n |-- prediction: double (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1494191575375_1856653151","id":"20170507-171255_383063183","dateCreated":"2017-05-07T17:12:55-0400","dateStarted":"2017-05-07T17:13:13-0400","dateFinished":"2017-05-07T17:13:13-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9474"},{"text":"%sql\nselect max(prediction), max(num)\nfrom predictions2","user":"anonymous","dateUpdated":"2017-05-07T17:11:22-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"max(prediction)\tmax(num)\n298.959702039201\t5448\n"}]},"apps":[],"jobName":"paragraph_1494191260339_102150026","id":"20170507-170740_1408902676","dateCreated":"2017-05-07T17:07:40-0400","dateStarted":"2017-05-07T17:11:22-0400","dateFinished":"2017-05-07T17:11:37-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9475"},{"text":"%sql\nselect \nfrom predictions\ngroup by pickupCluster","user":"anonymous","dateUpdated":"2017-05-07T17:35:27-0400","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"max(prediction)\tmax(num)\n801.9545411076368\t5675\n"}]},"apps":[],"jobName":"paragraph_1494185209749_-649134283","id":"20170507-152649_8285786","dateCreated":"2017-05-07T15:26:49-0400","dateStarted":"2017-05-07T17:11:51-0400","dateFinished":"2017-05-07T17:11:52-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9476"},{"text":"%sql\nselect prediction, num\nfrom predictions3","user":"anonymous","dateUpdated":"2017-05-08T10:06:27-0400","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"scatterChart","height":300,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"prediction\tnum\n88.82505995712552\t80\n95.70146049369144\t25\n95.70146049369144\t176\n89.86296529815175\t160\n133.89155505501424\t93\n135.86219881776492\t358\n92.43335841551198\t370\n101.75350646912132\t322\n97.79367415281494\t138\n94.3007010800516\t358\n135.81808581422536\t202\n136.47360391624213\t47\n85.9451867959675\t83\n93.99080743053935\t46\n146.67936162683603\t41\n89.48939566449054\t217\n87.98826611753837\t90\n86.0680453704228\t26\n73.5199131636886\t33\n136.93793010017993\t17\n72.26837626023418\t114\n72.26837626023418\t26\n97.82399776338556\t174\n88.19865076165415\t31\n73.5199131636886\t9\n84.32566455583292\t93\n102.67744931366408\t16\n153.8963049476054\t181\n67.07198719319861\t98\n82.19987792376139\t62\n85.14005208444402\t115\n65.90642907725758\t54\n149.81338134829204\t492\n96.3771638577318\t88\n93.14424417972585\t7\n138.72081793333095\t13\n93.14424417972585\t26\n92.6983275664714\t168\n91.52243281592997\t122\n87.42433041702789\t190\n123.62745480957213\t413\n88.49958414773936\t190\n146.0878012087417\t100\n143.8648099501446\t180\n82.66792126597278\t1\n83.90741897124924\t177\n83.28291976529364\t48\n97.92394517509072\t206\n90.64509738896908\t48\n66.21725603047398\t33\n76.20700461288845\t30\n125.89692582155918\t132\n146.84668504119924\t180\n81.96883009144778\t52\n96.4924230194259\t307\n139.77147491383977\t399\n84.91008932465047\t48\n89.3426064087404\t127\n83.53696840372949\t139\n67.11357381221248\t359\n66.21725603047398\t93\n100.15809927935506\t274\n85.02589070041007\t55\n135.96777443146286\t31\n125.87291202752041\t135\n80.18699731512858\t38\n98.2473328301023\t121\n144.53888538231757\t62\n82.08463146720739\t1\n86.02185658864305\t118\n85.82435706276513\t24\n89.83450641038931\t217\n145.93575207580074\t198\n143.70876911273083\t5\n96.61221609965838\t12\n83.72627969335669\t149\n138.74499116869288\t62\n143.0490654628977\t179\n85.15541762403382\t33\n83.39872114105326\t60\n134.2531151311456\t135\n67.39034788795882\t27\n72.44905464775545\t32\n66.4554248895904\t37\n100.41683773703238\t171\n87.0331450025017\t61\n83.64244827922968\t156\n84.26694748518524\t17\n72.59121024283802\t68\n87.53380199700088\t142\n123.97626598594636\t68\n85.9266336174393\t52\n89.43514912002328\t4\n82.75647227278283\t43\n87.51687312831078\t2\n84.25001861649514\t65\n143.0490654628977\t355\n85.9266336174393\t280\n144.08477339927475\t131\n93.92975522576606\t4\n87.51687312831078\t43\n94.35261660390488\t237\n84.74245226689523\t17\n86.48703987009357\t37\n67.74268888214237\t118\n94.35261660390488\t123\n85.46386897154859\t129\n85.46386897154859\t14\n85.59339589517234\t72\n85.20373158870446\t14\n85.20373158870446\t55\n135.84225904958728\t148\n84.11795306093966\t25\n101.67029344788943\t41\n146.729205590348\t399\n84.78308531765997\t7\n86.43249530829212\t37\n92.0047789721912\t64\n83.90453747326852\t10\n96.72156165425373\t106\n145.93575207580074\t446\n138.7810805859593\t445\n123.46438459947113\t95\n85.65082461215957\t12\n144.27292324049807\t604\n65.770001818498\t9\n125.70860537785003\t56\n145.8661195755598\t681\n94.40565229551095\t202\n87.77801496656555\t161\n92.95668207527176\t24\n90.75562948430917\t70\n86.55890552656952\t264\n135.53794993345588\t45\n142.75642849431225\t204\n90.23015658460712\t171\n82.7744458374682\t43\n90.23015658460712\t119\n94.40565229551095\t175\n67.66507595653341\t5\n76.28135406785924\t50\n68.21087063031541\t34\n84.80911399529917\t101\n97.3923698091803\t678\n148.2992556676529\t25\n137.44533336192978\t9\n93.03019198913931\t177\n101.85079218347137\t117\n87.44139767718796\t299\n86.74017460536433\t65\n92.58427537588483\t98\n90.23015658460712\t23\n132.6829139927121\t36\n123.5447035632242\t101\n147.9987449667035\t14\n88.70452101256058\t66\n108.37964196512804\t237\n82.88804265071388\t66\n90.32145118453924\t15\n88.95835015255962\t160\n92.35201071402446\t73\n94.21999742364163\t1\n136.22986851519298\t335\n88.40277822214154\t30\n85.1900271093433\t50\n88.77518492152848\t19\n81.28178588254322\t87\n94.24432916183761\t277\n135.44732489750777\t12\n138.09353863265406\t343\n94.24432916183761\t124\n94.24432916183761\t39\n96.29930657889804\t60\n80.87568443122255\t171\n89.61694928016\t57\n132.6871693969778\t78\n89.83114915141272\t20\n124.37108042311446\t55\n75.83705495086662\t121\n87.38983946328635\t3\n84.26114072810101\t602\n147.4395640737337\t700\n90.046764092213\t51\n83.58633393776674\t112\n83.84038257620263\t27\n102.52969471307334\t216\n87.0123700464856\t127\n84.19577954978706\t57\n90.14419960280998\t312\n90.14419960280998\t13\n98.65094294175087\t252\n96.84334160602461\t499\n97.33329847630853\t491\n86.30679093705325\t14\n91.2206061612336\t558\n88.31445814260101\t81\n100.18414539965111\t12\n95.08152753469133\t9\n87.12675030330287\t189\n136.02975993815429\t72\n84.57765334552141\t59\n134.2164128681502\t53\n134.6278893432247\t167\n82.63737599162037\t16\n86.19182878706592\t10\n88.27419876732993\t266\n86.68402856668528\t43\n59.19234673706704\t4\n96.38405729409439\t2\n95.47192478761602\t90\n67.5135318654384\t6\n78.65623647775723\t61\n71.34540140536286\t205\n96.59251055973421\t194\n94.96409196764023\t36\n83.94182060253497\t3\n98.76055767500584\t2\n85.53015939197206\t12\n87.54170594261078\t66\n145.91706015995968\t170\n83.46456233464367\t112\n89.2443529707103\t47\n100.42299391738305\t241\n97.00770404716074\t39\n96.59125709074438\t135\n98.24316751019347\t24\n123.46175645657166\t34\n90.01211006634456\t9\n72.49804447094783\t1\n103.96417910337237\t39\n140.68741345230194\t24\n67.10149615377217\t30\n75.14825670755623\t85\n75.82728858707871\t43\n135.43641493769084\t1\n80.40466213489908\t185\n111.44811047781027\t32\n120.51010567070982\t76\n76.43531135266137\t46\n71.77865361439765\t21\n133.0335442900155\t496\n72.18625309406505\t71\n61.306750979397926\t141\n121.66816561952935\t37\n76.12541770314913\t18\n76.12541770314913\t10\n73.37923931039106\t13\n78.9769278332056\t86\n71.64306176726538\t14\n71.06145527393554\t19\n76.46563496323198\t87\n140.06898210989013\t151\n74.11252311266861\t57\n80.94763310349472\t16\n132.33240553634616\t3\n76.15574131371973\t30\n71.92112992825746\t33\n89.33176303629035\t304\n131.89077409061292\t358\n63.82739281255008\t75\n142.97674755032386\t507\n127.39136366261351\t37\n72.0775492261016\t16\n70.4269484666134\t48\n142.0175845312762\t1\n137.38165228731793\t113\n120.06017074592101\t40\n73.47432925244516\t60\n141.97081875924258\t237\n141.97081875924258\t4\n73.60385617606887\t8\n52.20455395959837\t1\n140.59289209057084\t257\n68.89321895039838\t3\n76.57815513340472\t314\n131.47559643070116\t73\n70.70558058944727\t5\n132.83050528038018\t44\n128.5410923642723\t35\n72.96408390209922\t2\n74.07794372367556\t19\n132.94949521275632\t7\n122.02798223297027\t1211\n73.59013062820478\t42\n73.59013062820478\t40\n78.74353000860859\t101\n81.48349014546898\t16\n81.48349014546898\t33\n69.00902032615801\t2\n67.9095685081473\t19\n74.03696510443756\t2\n70.16290958103907\t19\n132.72459339664974\t7\n84.19504633843601\t156\n135.9976759820006\t33\n76.5901005586176\t29\n76.5901005586176\t2\n81.48349014546898\t37\n72.82423547821602\t2\n74.33653725369035\t4\n128.431188776069\t10\n79.34341839054164\t290\n79.61110888170916\t329\n61.230489263568835\t12\n118.75584619066127\t26\n74.32508138281295\t89\n67.9095685081473\t10\n71.7101555072866\t76\n63.3968136343268\t17\n70.99381614715402\t55\n84.04897103901277\t42\n140.41904147136967\t148\n139.47927410135725\t161\n144.1914895254254\t252\n79.12329692172474\t1\n70.98305711208144\t97\n79.45136264419206\t1\n133.4231978237606\t148\n148.04757211366424\t111\n56.51593306032147\t18\n81.6940596956698\t30\n78.42195913223534\t65\n74.28702277480974\t21\n71.10795911178629\t68\n84.14666623017332\t154\n62.95684431928977\t4\n68.72786410919252\t18\n71.01645999871764\t132\n74.30081583492812\t4\n71.04824225803712\t25\n90.49555592519415\t344\n84.16045929029171\t63\n61.39757952262196\t46\n56.60549870142414\t4\n76.55591048115842\t229\n133.20337293115162\t43\n133.00948051798343\t88\n119.91107876520235\t236\n76.64007011675535\t5\n72.37451168836682\t112\n74.53511579079557\t51\n140.29626736940776\t241\n76.67256969274297\t13\n137.5156824799559\t1\n144.02706257296174\t4\n79.91614730031681\t79\n49.48213782406691\t30\n121.71832123845417\t70\n65.66226195010307\t30\n144.0852222582045\t199\n78.55241140393825\t1\n68.04723700945904\t26\n70.46501047908457\t32\n132.08906953774832\t455\n77.78974166395841\t11\n57.88383448011652\t22\n78.55241140393825\t29\n121.36328178542146\t30\n69.23219956885531\t455\n119.73033822816905\t26\n74.72690237736875\t244\n74.11823469858864\t4\n69.69125944537436\t223\n71.73447835903671\t103\n129.84929446805472\t20\n79.98965721418435\t33\n76.78263881390303\t22\n81.85211394836985\t88\n79.46450756361996\t66\n71.80116863461177\t12\n132.53070098348158\t62\n84.31957511783752\t47\n90.58176491852385\t60\n68.9354093698156\t221\n121.37172083942988\t136\n56.591257595198186\t6\n133.2123200535908\t55\n71.05789260070654\t32\n76.51849362643371\t42\n76.51849362643371\t60\n127.65727844565814\t4\n79.57515850995159\t142\n119.79935665369304\t49\n132.84475367946905\t1401\n72.37337647300866\t42\n76.63136327827434\t169\n72.6422971088983\t192\n73.48001268870769\t91\n71.08314539874493\t35\n79.21770947046143\t8\n70.78214830791889\t106\n74.39909724259509\t17\n50.39037808656901\t21\n48.79061146621726\t1\n131.73119994688443\t344\n132.53967667312202\t44\n139.2733237845367\t163\n73.60953961233142\t119\n81.678457527784\t8\n74.24895692232455\t8\n57.4600458036124\t21\n139.48011723271907\t69\n70.6706834229421\t6\n79.91541153363977\t90\n71.36621410567156\t38\n90.31893020569652\t14\n82.09124799784655\t161\n71.36621410567156\t29\n71.36621410567156\t1\n68.82023198958863\t99\n71.18616390199882\t43\n61.27629164462869\t1\n69.80634551492075\t26\n48.02152643966147\t33\n79.33101557199232\t82\n72.56484577231214\t36\n72.82253980753997\t29\n77.17353987545975\t69\n73.31282599911653\t162\n57.196633288025296\t3\n72.80518581725119\t151\n83.05993269450227\t64\n129.81406334188532\t11\n124.33860513321451\t97\n71.12690569177752\t82\n74.95364531640932\t29\n67.82632732502228\t29\n78.44009338202042\t105\n78.76649230833297\t48\n73.88964271132556\t68\n72.4075381476492\t51\n68.93430746378725\t15\n71.9178393060946\t18\n78.11325429402834\t202\n72.85094209248115\t20\n78.92454656103304\t105\n78.04539600315897\t65\n138.77889138351975\t16\n78.42373744065809\t348\n72.3422470062239\t76\n68.73092401634204\t9\n57.10300548969436\t139\n74.08345441042584\t96\n76.66902184022169\t216\n129.25892025350447\t222\n139.26314404281482\t345\n75.61256408477618\t62\n71.08008524567414\t15\n71.6450189328058\t128\n71.03117087380818\t30\n62.8492152007997\t35\n61.68634776991187\t32\n60.30779363311061\t1\n55.22853586927008\t79\n60.98459158367545\t11\n60.98459158367545\t31\n52.225068137958495\t13\n68.54975577361154\t46\n51.476328540051384\t127\n60.14764950271699\t5\n56.5645755841164\t12\n51.476328540051384\t31\n57.045592415125334\t1\n97.16741135577067\t100\n62.980692520716126\t53\n61.23488609754142\t18\n95.22677303010128\t39\n106.43734566569957\t24\n101.03304431389678\t277\n56.70762725333449\t39\n56.85930704835884\t28\n60.4970817384182\t17\n113.82206044366703\t78\n57.10545813630439\t6\n109.05765162257295\t837\n109.05765162257295\t88\n109.05765162257295\t674\n46.92244323070495\t27\n57.11222545659511\t11\n60.97232638704864\t94\n56.97533799499041\t5\n56.5455890245809\t73\n57.296939806121\t13\n58.428078397440416\t50\n59.57090382706604\t2\n46.90792190539986\t61\n56.70500404445925\t62\n56.70500404445925\t10\n62.974024171547676\t58\n57.10545813630439\t62\n58.41379397829064\t32\n94.63730551269352\t3\n56.70500404445925\t7\n56.70500404445925\t23\n95.51882952396754\t46\n99.33536372175139\t292\n48.68832812889549\t47\n107.10314882383538\t51\n41.41563174867385\t43\n56.185411044065496\t2\n57.25140614230661\t105\n56.70095890416604\t27\n57.0617540937121\t10\n102.12644792014414\t480\n98.27863022537397\t65\n100.39891871754287\t546\n58.22475394201503\t27\n99.98920800204169\t29\n58.22475394201503\t15\n57.0617540937121\t68\n99.86065068058643\t35\n99.98920800204169\t249\n58.22475394201503\t31\n103.08016168817396\t56\n61.88920424587656\t46\n97.7256479967374\t2\n61.59943375954253\t20\n56.70637570151335\t23\n98.27863022537397\t87\n101.22189552913756\t88\n64.47434162148471\t38\n93.81231473626438\t17\n57.503477954730755\t12\n64.31589805385195\t37\n94.78468999822879\t116\n57.19835753351165\t115\n96.50837186856215\t12\n57.17269503069028\t14\n60.92339863764857\t73\n63.39554893370939\t81\n96.58895764815927\t1081\n106.35299045424014\t436\n56.90236108015912\t1\n56.742946060280765\t76\n61.76836209908174\t6\n62.03182300260241\t57\n99.93888123025559\t533\n106.42092918971085\t313\n57.30728237251024\t20\n57.231104808543215\t17\n56.51778174952481\t4\n57.002958510552475\t10\n57.16237353043083\t27\n46.39580534599595\t3\n56.440624025204485\t59\n57.030766746415416\t5\n106.35299045424014\t1\n104.05192506705434\t146\n56.558283185768985\t14\n56.87511071120957\t93\n56.87511071120957\t23\n61.454604054382834\t108\n56.440624025204485\t3\n99.14850563575713\t43\n58.38233740313976\t43\n60.89614826869902\t1\n48.8150369219202\t6\n62.10646025680475\t100\n96.48576972125309\t22\n57.317566464441256\t23\n57.36740080724968\t61\n106.42092918971085\t39\n55.72433641105831\t42\n113.62043153623918\t174\n61.62672585708336\t13\n106.42092918971085\t2\n56.673393873199736\t62\n104.27655041159406\t55\n38.557516527703\t47\n106.25911433884369\t142\n104.27655041159406\t1\n56.36274569303875\t1\n55.951274009951796\t27\n59.18496036192994\t29\n109.30127799244516\t364\n57.3722108882181\t1\n55.91296987279699\t10\n48.4615744589336\t4\n100.10720443896379\t801\n98.31287295666758\t886\n57.67462906951138\t25\n56.96943604908787\t7\n41.80933677242741\t1\n37.67075812185906\t8\n57.07062678708172\t43\n48.4615744589336\t7\n54.58722097015932\t57\n99.6784079423883\t481\n61.05495272243174\t60\n98.33313746815973\t31\n61.8727111735529\t11\n104.25026452662509\t29\n104.25026452662509\t120\n56.673393873199736\t21\n57.929316790454166\t42\n57.00541570634957\t19\n55.911838495738714\t45\n60.75362417681183\t13\n55.91296987279699\t18\n96.0587548616562\t121\n96.39646362205478\t33\n63.076754564833514\t76\n106.05697757497234\t3\n57.31606388651055\t18\n57.12163900107535\t16\n57.70956352433927\t37\n56.55538433059134\t12\n56.55538433059134\t8\n56.497954025657066\t26\n57.207896831877804\t12\n64.28574882972475\t113\n45.32162325209567\t13\n93.14384619669498\t12\n105.92729873978978\t108\n46.50487331931484\t6\n57.69203224636301\t16\n57.44612372029155\t56\n54.097944403263256\t22\n55.73812775045771\t10\n55.91296987279699\t17\n55.91296987279699\t3\n104.2842226466337\t24\n106.00850513762308\t44\n98.1594305154376\t198\n99.19843214894475\t39\n57.09486066790083\t12\n69.70024681729733\t79\n56.58033039997213\t50\n54.179941517473765\t32\n54.179941517473765\t9\n55.693382885871124\t28\n56.63738144480185\t6\n55.99496698700751\t15\n55.99496698700751\t3\n99.18507025707247\t311\n57.143020967519995\t110\n56.755390987410244\t5\n57.48487884164284\t74\n57.143020967519995\t100\n69.7867112540713\t80\n48.19751982259126\t4\n94.06911302602572\t17\n56.63738144480185\t11\n56.63738144480185\t21\n61.252091609567124\t3\n56.885890492215935\t43\n61.83392343601516\t16\n99.18507025707247\t125\n48.60848301280844\t12\n57.36989822012253\t1\n59.04821297499887\t26\n97.61343703273053\t219\n56.509620704833786\t46\n52.4379527094699\t58\n104.14804717646493\t33\n99.67426657744475\t242\n61.4761048743728\t7\n56.509620704833786\t8\n45.671237026460744\t8\n57.38753244181946\t85\n57.38753244181946\t24\n59.66596059531199\t72\n58.03286308855744\t60\n48.370227352955105\t7\n59.043214283793525\t4\n95.28167340633321\t103\n92.87055382721236\t35\n56.10472665873976\t19\n54.91895754234637\t28\n97.99473506959963\t48\n56.60885682816514\t9\n47.46147381774347\t10\n99.97904678466982\t10\n102.8505580495876\t619\n111.5815083431347\t70\n92.71511579373768\t17\n56.20479190338072\t26\n56.35148174335894\t42\n106.63065993349781\t53\n55.06984377524595\t3\n55.012413470311685\t104\n94.15277714334927\t195\n61.22823276967258\t253\n57.403667393991924\t6\n94.18297645704139\t69\n55.79679666932594\t191\n56.409477768896515\t47\n102.20563512951878\t268\n57.154278681874004\t33\n99.53723994010316\t558\n47.97753675594638\t5\n48.570006304786844\t10\n106.77095938445237\t28\n57.018902253520345\t21\n54.09434645839283\t63\n40.10762781450946\t14\n45.70478720696497\t45\n35.606093758476675\t4\n60.17682264030836\t123\n56.32339765663385\t21\n46.665191837537954\t4\n100.58106866397198\t1\n55.59368061776097\t3\n59.88833849404867\t7\n56.257353417515596\t4\n45.46756689277414\t19\n55.58701226859252\t119\n95.83733432445797\t27\n56.527687368046756\t13\n60.531002350867304\t41\n59.8442982370192\t24\n55.461842124059906\t4\n61.88528370925828\t66\n58.05673333331395\t12\n49.78909074633034\t5\n56.50705936083139\t31\n61.88528370925828\t1\n102.78062469386042\t104\n57.028385496025486\t26\n67.93905144477081\t74\n86.67190868412457\t46\n59.79260405195959\t156\n46.8210677408234\t6\n56.55160785191427\t45\n55.07562247343853\t29\n86.77152461534325\t4\n56.51201222704103\t17\n56.523459139361165\t6\n55.66240072668706\t1\n56.31851833787289\t4\n56.95677790780593\t64\n56.038267417230884\t20\n94.29951862393368\t427\n87.35052128368812\t10\n101.00490142871462\t22\n56.523459139361165\t1\n88.24836249875311\t20\n98.82227317623361\t251\n85.8088485297566\t32\n56.641647516509444\t54\n94.29951862393368\t17\n56.55160785191427\t1\n88.7782648053843\t21\n55.77037028955601\t11\n94.18550458826805\t1\n56.038267417230884\t12\n100.93696269324391\t6\n56.65564643212468\t11\n56.96402326794462\t5\n55.657171608564106\t5\n60.26582566484952\t11\n55.032015685739616\t3\n86.31235179915714\t250\n89.70660878809107\t1051\n86.65006055955571\t53\n56.248688491289144\t1\n56.53013960920427\t36\n56.018605528237394\t2\n86.95862233000676\t9\n90.2026414694611\t98\n97.57696213942687\t12\n102.88583861883177\t24\n55.64083500699561\t47\n93.75563736446641\t324\n56.952576355624494\t18\n56.97444071613488\t2\n56.56271533535984\t7\n55.07188549509137\t51\n85.7064600622724\t12\n56.033038299107936\t50\n56.033038299107936\t28\n60.873459290130334\t17\n56.36757658763115\t1\n35.706272442334864\t25\n50.41885387111519\t48\n56.248688491289144\t2\n57.85709251647871\t16\n54.24547339540268\t14\n43.664589146511304\t22\n55.78234175309672\t59\n93.86160361373412\t14\n93.86160361373412\t19\n86.63497132613703\t19\n94.23301019208049\t32\n56.627589037902844\t4\n60.20380997953046\t14\n97.5543599921178\t9\n52.06748526677296\t5\n55.63051350673616\t30\n55.782437701027526\t2\n56.627589037902844\t45\n100.70944402667969\t234\n56.67105255913316\t5\n57.41481417215949\t11\n93.86160361373412\t283\n56.3403262186816\t11\n52.44226080796795\t11\n102.96163888370552\t590\n55.182391823507324\t7\n55.100499758879145\t26\n35.6945927156056\t1\n75.65431892185389\t2\n55.92061057917753\t105\n56.63468446451823\t2\n57.835148529620675\t19\n75.65206360369027\t88\n88.11902088492937\t12\n60.9737188856177\t5\n57.142662084366904\t3\n57.425144980591604\t28\n56.86121096645179\t8\n60.393290270648905\t59\n56.480852186594674\t94\n100.40576468409017\t122\n52.39676928441671\t49\n93.73303521715734\t1\n55.98377175315863\t54\n55.35638513820262\t14\n68.6579034409467\t32\n62.66055754565005\t69\n85.68385791496333\t23\n55.90306515390789\t6\n46.26303233304534\t28\n56.92730383468838\t7\n54.184029681979695\t7\n85.67218576741732\t37\n86.63497132613703\t107\n86.63497132613703\t40\n56.484935020368326\t40\n86.50641400468177\t36\n55.99879959599696\t3\n96.54412340493091\t270\n55.98377175315863\t4\n87.83386139776266\t7\n52.157984446887596\t55\n55.98377175315863\t6\n60.84854874108509\t36\n60.341596085589295\t18\n35.2038776320431\t14\n45.733545642845506\t28\n60.98413633380796\t20\n93.32566674193994\t16\n44.36084185722225\t23\n44.778231324148045\t7\n55.98377175315863\t54\n56.85074009355798\t6\n56.653020936524825\t1\n43.72800874117116\t2\n93.94840005262422\t75\n68.62745322269187\t81\n38.86895701084657\t9\n55.9608585975511\t5\n93.56584507989542\t73\n58.578605246893346\t12\n63.3065667090203\t62\n56.51068363851032\t16\n44.605648164601384\t12\n88.46802173960636\t325\n56.473468777080924\t24\n93.56464187092651\t3\n56.489805378649436\t1\n55.397068156615724\t7\n55.68600480708965\t18\n55.98733335270955\t5\n57.79103538486428\t14\n61.59455951258883\t16\n85.55997022449668\t27\n57.46699968235146\t1\n56.967730924941804\t8\n56.334186975803775\t4\n56.62497525553176\t10\n68.54268559960448\t33\n55.75815854786686\t1\n88.46416969250421\t35\n57.54231828772808\t13\n47.35224203662749\t19\n86.03767409150888\t175\n82.73261276696404\t124\n55.86809998199013\t37\n56.12185820164649\t6\n55.567349337631725\t16\n92.54272929816673\t3\n93.65480807489055\t10\n91.39292420334849\t224\n54.3632800398917\t13\n57.221473405718264\t1\n59.00426799626948\t84\n57.43050912115204\t29\n58.952871978915404\t29\n50.65942842799434\t18\n59.31923904490195\t20\n55.74746456707449\t15\n55.84113187690029\t20\n55.944057616993\t124\n91.76322650805345\t3\n57.56526266626312\t1\n56.25146882692442\t5\n56.959644903465076\t43\n57.935982598715455\t4\n35.55145878791087\t1\n56.499311295678325\t29\n86.33672390510813\t8\n57.609329266629196\t49\n46.64816013546654\t14\n35.846877171348275\t29\n56.00493317325817\t4\n55.96057242866411\t2\n96.3045926775314\t31\n55.4702741540372\t35\n54.1244270347331\t1\n44.04862123179214\t4\n54.73594574035157\t16\n56.02031322778315\t6\n57.60319320131724\t33\n75.48967368551243\t13\n56.172237422074524\t54\n35.16440627298727\t2\n74.82113659547441\t31\n72.64043995529217\t4\n55.29378992279632\t1\n57.42947283367181\t10\n58.78375974880944\t35\n76.77988747776693\t12\n65.55530140631774\t16\n56.4821027884732\t15\n56.22829591356164\t161\n59.53232538439083\t3\n56.58303760831665\t20\n76.0744265240347\t14\n76.30318506402615\t20\n56.68301446868251\t4\n57.42280448450336\t47\n75.93459111830843\t121\n71.16385899726505\t98\n43.30613419863934\t3\n67.10525875458393\t24\n46.67692618559122\t6\n55.68705186365947\t19\n72.02407294707363\t99\n65.55530140631774\t22\n59.05788328411733\t34\n55.797334954858535\t61\n76.03786941891485\t174\n67.12194599791658\t78\n46.779915979267415\t11\n62.749795331714935\t13\n56.523544879704794\t4\n54.95979754908951\t32\n66.98916982006638\t25\n72.50747353109907\t99\n56.198131869116175\t1\n59.32662771045226\t1\n63.13708208845103\t78\n73.72225733261676\t312\n54.95979754908951\t50\n62.90780745133327\t34\n57.05576240179052\t33\n58.03934545717956\t25\n72.42124589250857\t38\n73.68883185960456\t40\n35.307898194860705\t5\n77.44145632773059\t254\n35.199131976785395\t32\n67.10294815079345\t97\n75.80855144968713\t37\n61.52841756466143\t50\n71.71467076741823\t23\n56.3731970369292\t6\n56.14159966266362\t1\n73.73818987088893\t53\n75.90220449226007\t277\n59.427716526888034\t50\n56.34663641208269\t30\n72.8834385124177\t10\n58.029023956920106\t13\n54.0619701982811\t25\n73.8071844160444\t47\n73.85437603174445\t25\n73.32447372511328\t53\n71.69206862010915\t1\n56.36287553666975\t23\n70.17862725171179\t53\n55.575411566678476\t13\n72.39864374519951\t20\n60.30256018051098\t36\n73.17294899861483\t2\n56.437478472350634\t41\n72.64737252633539\t347\n56.49255753240809\t1\n73.32447372511328\t1\n59.17803680769021\t1\n59.17803680769021\t1\n55.382285921271304\t3\n76.62698439995835\t11\n71.9815791063063\t16\n56.17152078239912\t58\n46.092120130622874\t1\n74.61981922153467\t27\n77.2803403235318\t58\n77.2803403235318\t144\n<!--TABLE_COMMENT-->\n<font color=red>Results are limited by 1000.</font>"}]},"apps":[],"jobName":"paragraph_1494185963955_-1488783910","id":"20170507-153923_871601919","dateCreated":"2017-05-07T15:39:23-0400","dateStarted":"2017-05-08T10:05:19-0400","dateFinished":"2017-05-08T10:05:19-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:9477"},{"text":"%sql\n","user":"anonymous","dateUpdated":"2017-05-08T10:02:53-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1494252173879_545699810","id":"20170508-100253_1083182037","dateCreated":"2017-05-08T10:02:53-0400","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:9478"}],"name":"randomForest","id":"2CHHBUJEN","angularObjects":{"2CFJKQVBN:shared_process":[],"2CF295UYG:shared_process":[],"2CDUTWP3P:shared_process":[],"2CD6ZRPDJ:shared_process":[],"2CG949ZHZ:shared_process":[],"2CG23YGEZ:shared_process":[],"2CEJ86HV3:shared_process":[],"2CEZMWG72:shared_process":[],"2CDY97F39:shared_process":[],"2CFXK5J4Y:shared_process":[],"2CFXDXWCE:shared_process":[],"2CEZV3CHG:shared_process":[],"2CDM4T1EH:shared_process":[],"2CEC5KMFB:shared_process":[],"2CFWFHNZR:shared_process":[],"2CFG6Y8G3:shared_process":[],"2CGYXR37V:shared_process":[],"2CFFWS5P3:shared_process":[],"2CFGNABPQ:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}